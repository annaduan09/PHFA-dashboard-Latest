#### Set up #### 
library(tidycensus)
library(dplyr)
library(tidyr)
library(ggplot2)
library(leaflet)
library(sf)
library(mapview)

mapTheme <- function(base_size = 15) {   
  theme(     text = element_text(color = "black", family="Helvetica"),     
             plot.title = element_text(size = 20,colour = "black", hjust=0, face="bold"),     
             plot.subtitle=element_text(face="italic", hjust = 0),     
             plot.caption=element_text(size = 7, hjust = 0),     
             axis.ticks = element_blank(),     
             axis.text = element_blank(),
             axis.title = element_blank(),     
             panel.grid.major = element_blank(),
             panel.grid.minor = element_blank(),     
             panel.border = element_rect(colour = "white", fill=NA, size=2),
             panel.background = element_rect(fill = "grey90", size = 0, colour = NA),     
             legend.background = element_blank(),     
             legend.position="right"   ) }

#### Pull data ####
#### census panels
census_api_key("d9ebfd04caa0138647fbacd94c657cdecbf705e9", install = TRUE, overwrite = TRUE)
census_vars <- load_variables(year = 2021, dataset = "acs5")

# owner occupied: B25011_002
# all HH: B11007_001

dat_21 <- get_acs(geography = "county", variables = c("B25011_002", "B11007_001"), year = 2021, state = "PA",
               geometry = TRUE, survey = "acs5", output = "wide") %>%
  rename(owner_occ_hh = B25011_002E,
         total_hh = B11007_001E) %>%
  mutate(owner_occ_hh_pct = ifelse(total_hh > 0, round(100*owner_occ_hh/total_hh), 0),
         NAME = word(NAME, 1)) %>%
  rename(owner_occ_hh_21 = owner_occ_hh,
         owner_occ_hh_pct_21 = owner_occ_hh_pct,
         total_hh_21 = total_hh) %>%
  dplyr::select(NAME, total_hh_21, owner_occ_hh_21, owner_occ_hh_pct_21, geometry)
  

dat_20 <- get_acs(geography = "county", variables = c("B25011_002", "B11007_001"), year = 2020, state = "PA",
               geometry = FALSE, survey = "acs5", output = "wide") %>%
  rename(owner_occ_hh = B25011_002E,
         total_hh = B11007_001E) %>%
  mutate(owner_occ_hh_pct = ifelse(total_hh > 0, round(100*owner_occ_hh/total_hh), 0),
         NAME = word(NAME, 1)) %>%
  rename(owner_occ_hh_20 = owner_occ_hh,
         owner_occ_hh_pct_20 = owner_occ_hh_pct,
         total_hh_20 = total_hh) %>%
  dplyr::select(NAME, total_hh_20, owner_occ_hh_20, owner_occ_hh_pct_20)

dat_19 <- get_acs(geography = "county", variables = c("B25011_002", "B11007_001"), year = 2019, state = "PA",
               geometry = FALSE, survey = "acs5", output = "wide") %>%
  rename(owner_occ_hh = B25011_002E,
         total_hh = B11007_001E) %>%
  mutate(owner_occ_hh_pct = ifelse(total_hh > 0, round(100*owner_occ_hh/total_hh), 0),
         NAME = word(NAME, 1)) %>%
  rename(owner_occ_hh_19 = owner_occ_hh,
         owner_occ_hh_pct_19 = owner_occ_hh_pct,
         total_hh_19 = total_hh) %>%
  dplyr::select(NAME, total_hh_19, owner_occ_hh_19, owner_occ_hh_pct_19)

dat_18 <- get_acs(geography = "county", variables = c("B25011_002", "B11007_001"), year = 2018, state = "PA",
               geometry = FALSE, survey = "acs5", output = "wide") %>%
  rename(owner_occ_hh = B25011_002E,
         total_hh = B11007_001E) %>%
  mutate(owner_occ_hh_pct = ifelse(total_hh > 0, round(100*owner_occ_hh/total_hh), 0),
         NAME = word(NAME, 1)) %>%
  rename(owner_occ_hh_18 = owner_occ_hh,
         owner_occ_hh_pct_18 = owner_occ_hh_pct,
         total_hh_18 = total_hh) %>%
  dplyr::select(NAME, total_hh_18, owner_occ_hh_18, owner_occ_hh_pct_18)

dat_17 <- get_acs(geography = "county", variables = c("B25011_002", "B11007_001"), year = 2017, state = "PA",
               geometry = FALSE, survey = "acs5", output = "wide") %>%
  rename(owner_occ_hh = B25011_002E,
         total_hh = B11007_001E) %>%
  mutate(owner_occ_hh_pct = ifelse(total_hh > 0, round(100*owner_occ_hh/total_hh), 0),
         NAME = word(NAME, 1)) %>%
  rename(owner_occ_hh_17 = owner_occ_hh,
         owner_occ_hh_pct_17 = owner_occ_hh_pct,
         total_hh_17 = total_hh) %>%
  dplyr::select(NAME, total_hh_17, owner_occ_hh_17, owner_occ_hh_pct_17)

dat <- dat_21 %>%
  left_join(dat_20, by = "NAME") %>%
  left_join(dat_19, by = "NAME") %>%
  left_join(dat_18, by = "NAME") %>%
  left_join(dat_17, by = "NAME")

#### Census rural-urban by county 
county <- st_read("/Users/annaduan/Library/CloudStorage/Box-Box/PHFA\ dashboard/data\ panels/2020_UA_COUNTY.xlsx") %>% 
  filter(Field1 == "42") %>%
  mutate(rural = ifelse(as.numeric(Field22)/as.numeric(Field5) > 0.5, 1, 0)) %>%
  dplyr::select(Field4, rural) %>%
  rename(NAME = Field4)

#### Write panel #### 
dat <- dat %>%
  left_join(county, by = "NAME")

st_write(dat, "homeownership_17_21.geojson")

#### Leaflet test run ####
dat <- st_read("/Users/annaduan/Library/CloudStorage/Box-Box/PHFA\ dashboard/data\ panels/homeownership_17_21.geojson") %>%
  st_as_sf()


pal <- colorFactor("YlGnBu", dat$owner_occ_hh_pct_21)


labs_dat <- sprintf(
  "<strong>%s</strong><br/>
  Home Ownership Rate $%s<sup></sup>",
  dat$NAME, dat$owner_occ_hh_pct_21
) %>% lapply(htmltools::HTML)

# 
# title <- tags$div(
#   HTML("<strong>2021 ACS Estimates</strong><br/>
#         Hover to see individual counties"))  


leaflet(dat) %>%
  addPolygons(fillColor = ~pal(owner_occ_hh_pct_21),
              weight = 2,
              opacity = 1,
              color = "white",
              dashArray = "3",
              fillOpacity = 0.7,
              highlightOptions = highlightOptions(
                weight = 5,
                color = "#666",
                dashArray = "",
                fillOpacity = 0.7,
                bringToFront = TRUE)
              # ,
              #  label = labs_dat,
              #  labelOptions = labelOptions(
              #    style = list("font-weight" = "normal", padding = "3px 8px"),
              #    textsize = "15px",
              #    direction = "auto")
)%>%
  addProviderTiles(providers$CartoDB.Positron) %>%
 # addControl(title, position = "topright") %>%
  addLegend(pal = pal, values = ~owner_occ_hh_pct_21, opacity = 0.7, title = "Home Ownership Rate<br/>by County (%)",
            position = "bottomright")
  